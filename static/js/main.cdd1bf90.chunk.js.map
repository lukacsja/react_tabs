{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","selectedTab","find","tab","id","className","map","cn","href","onClick","activeTab","title","content","App","useState","setSelectedTabId","ReactDOM","render","document","getElementById"],"mappings":"kNAeaA,EAAwB,SAAC,GAEhC,IADFC,EACC,EADDA,KAAMC,EACL,EADKA,cAAeC,EACpB,EADoBA,cAEjBC,EAAcH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,MAAkBD,EAAK,GAQvE,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKO,UAAU,gBAAf,SACE,6BACGP,EAAKQ,KAAI,SAACH,GAAD,OACR,oBAEEE,UAAWE,IAAG,CAAE,YAAaJ,EAAIC,KAAOH,EAAYG,KACpD,UAAQ,MAHV,SAKE,mBACEI,KAAI,WAAML,EAAIC,IACd,UAAQ,UACRK,QAAS,WAnBL,IAACC,KAmBoBP,GAlBvBC,KAAOL,GACnBC,EAAcU,IAcN,SAKGP,EAAIQ,SATFR,EAAIC,WAgBjB,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,SACGJ,EAAYW,cC3CRd,EAAO,CAClB,CAAEM,GAAI,QAASO,MAAO,QAASC,QAAS,eACxC,CAAER,GAAI,QAASO,MAAO,QAASC,QAAS,eACxC,CAAER,GAAI,QAASO,MAAO,QAASC,QAAS,gBAS7BC,EAAgB,WAC3B,MAA0CC,mBAAShB,EAAK,GAAGM,IAA3D,mBAAOL,EAAP,KAAsBgB,EAAtB,KAMMd,EAAcH,EAAKI,MAAK,SAACC,GAAD,OAASA,EAAIC,KAAOL,MAAkBD,EAAK,GAEzE,OACE,sBAAKO,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,0CACsBJ,QADtB,IACsBA,OADtB,EACsBA,EAAaU,SAGnC,qBAAK,UAAQ,gBAAb,SACE,cAAC,EAAD,CACEb,KAAMA,EACNC,cAAeA,EACfC,cAhBmB,SAACG,GAC1BY,EAAiBZ,EAAIC,aCnBzBY,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.cdd1bf90.chunk.js","sourcesContent":["import cn from 'classnames';\nimport React from 'react';\n\ninterface Tab {\n  id: string;\n  title: string;\n  content: string;\n}\n\ninterface Props {\n  tabs: Tab[];\n  selectedTabId: string;\n  onTabSelected: (tab: Tab) => void;\n}\n\nexport const Tabs: React.FC<Props> = (\n  { tabs, selectedTabId, onTabSelected },\n) => {\n  const selectedTab = tabs.find(tab => tab.id === selectedTabId) || tabs[0];\n\n  const selectTab = (activeTab: Tab) => {\n    if (activeTab.id !== selectedTabId) {\n      onTabSelected(activeTab);\n    }\n  };\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map((tab) => (\n            <li\n              key={tab.id}\n              className={cn({ 'is-active': tab.id === selectedTab.id })}\n              data-cy=\"Tab\"\n            >\n              <a\n                href={`#${tab.id}`}\n                data-cy=\"TabLink\"\n                onClick={() => selectTab(tab)}\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTab.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\ninterface Tab {\n  id: string;\n  title: string;\n  content: string;\n}\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0].id);\n\n  const handleTabSelection = (tab: Tab) => {\n    setSelectedTabId(tab.id);\n  };\n\n  const selectedTab = tabs.find((tab) => tab.id === selectedTabId) || tabs[0];\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTab?.title}`}\n      </h1>\n\n      <div data-cy=\"TabsComponent\">\n        <Tabs\n          tabs={tabs}\n          selectedTabId={selectedTabId}\n          onTabSelected={handleTabSelection}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}